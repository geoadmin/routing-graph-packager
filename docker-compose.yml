volumes:
  postgis-data:
  packages: # do not change any detail of this volume
    driver: local
    driver_opts:
      type: none
      device: $DATA_DIR # DATA_DIR is the host directory for the data. It has to be in the environment, e.g. in .env file
      o: bind
  tmp_data: # do not change any detail of this volume
    driver: local
    driver_opts:
      type: none
      device: $TMP_DATA_DIR # DATA_DIR is the host directory for the data. It has to be in the environment, e.g. in .env file
      o: bind

# It's important it runs in its own private network, also more secure
networks:
  routing-packager:

services:
  postgis:
    image: kartoza/postgis:12.1
    container_name: routing-packager-postgis
    volumes:
      - postgis-data:/var/lib/postgresql
    environment:
      - ALLOW_IP_RANGE=0.0.0.0/0
      - POSTGRES_MULTIPLE_EXTENSIONS=postgis
    # mostly needed to define the database hosts
    env_file:
      - .docker_env
    networks:
      - routing-packager
    ports:
      - 5555:5432
    restart: always
  redis:
    image: redis:6.2
    container_name:
      routing-packager-redis
      # mostly needed to define the database hosts
    env_file:
      - .docker_env
    networks:
      - routing-packager
    restart: always
  worker:
    image: ghcr.io/geoadmin/routing-graph-packager/routing-graph-packager:latest
    container_name: routing-packager-worker
    # only works off the package queue
    command: worker
    # mostly needed to define the database hosts
    env_file:
      - .docker_env
    networks:
      - routing-packager
    volumes:
      - packages:/app/data
      - tmp_data:/app/tmp_data
      - $PWD/.docker_env:/app/.env # Worker needs access to .env file
    depends_on:
      - postgis
      - redis
    healthcheck:
      disable: true
    restart: always
  app:
    image: ghcr.io/geoadmin/routing-graph-packager/routing-graph-packager:latest
    container_name: routing-packager-app
    ports:
      - 443:5000
    # mostly needed to define the database hosts
    env_file:
      - .docker_env
    volumes:
      - packages:/app/data
      - tmp_data:/app/tmp_data
      - $PWD/.docker_env:/app/.env # CLI needs access to .env file
      - $PWD/static:/app/static # static file for frontend
    networks:
      - routing-packager
    depends_on:
      - postgis
      - redis
      - worker
    healthcheck:
      disable: true
    restart: always
  fake-smtp-server:
    image: reachfive/fake-smtp-server:latest
    container_name: routing-packager-smtp
    # You can reach the frontend on localhost:1080
    ports:
      - 1080:1080
    networks:
      - routing-packager
    restart: always
