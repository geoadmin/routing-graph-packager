
volumes:
  postgis-data-test:
  packages-test:  # do not change any detail of this volume
    driver: local
    driver_opts:
      type: none
      device: $DATA_DIR  # DATA_DIR is the host directory for the data. It has to be in the environment, e.g. in .env file
      o: bind

# It's important it runs in its own private network, also more secure
networks:
  routing-packager-test:

version: '3.2'
services:
  postgis-test:
    image: kartoza/postgis:12.1
    container_name: routing-packager-postgis-test
    volumes:
      - postgis-data-test:/var/lib/postgresql
    environment:
      - ALLOW_IP_RANGE=0.0.0.0/0
      - POSTGRES_MULTIPLE_EXTENSIONS=postgis
    # mostly needed to define the database hosts
    env_file:
      - .docker_env
    networks:
      - routing-packager-test
    ports:
      - 5556:5432
    restart: always
  redis-test:
    image: redis:6.2
    container_name: routing-packager-redis-test
      # mostly needed to define the database hosts
    env_file:
      - .docker_env
    networks:
      - routing-packager-test
    restart: always
  worker-test:
    image: ghcr.io/geoadmin/routing-graph-packager/routing-graph-packager:test
    container_name: routing-packager-worker-test
    # only works off the package queue
    command: worker
    # mostly needed to define the database hosts
    env_file:
      - .docker_env
    networks:
      - routing-packager-test
    volumes:
      - packages-test:/app/data
      - $PWD/.docker_env:/app/.env  # Worker needs access to .env file
    depends_on:
      - postgis-test
      - redis-test
    healthcheck:
      disable: true
    restart: always
  app-test:
    image: ghcr.io/geoadmin/routing-graph-packager/routing-graph-packager:test
    container_name: routing-packager-app-test
    ports:
      - 5001:5000
    # mostly needed to define the database hosts
    env_file:
      - .docker_env
    volumes:
      - packages-test:/app/data
      - $PWD/ssl:/app/ssl  # optional SSL certificate for gunicorn
      - $PWD/.docker_env:/app/.env  # CLI needs access to .env file
    networks:
      - routing-packager-test
    depends_on:
      - postgis-test
      - redis-test
      - worker-test
    healthcheck:
      disable: true
    # set the proxies from the host env vars
    environment:
      http_proxy: "${http_proxy}"
      https_proxy: "${https_proxy}"
    restart: always
  fake-smtp-server-test:
    image: reachfive/fake-smtp-server:latest
    container_name: routing-packager-smtp-test
    # You can reach the frontend on localhost:1080
    ports:
      - 1081:1080
    networks:
      - routing-packager-test
    restart: always
